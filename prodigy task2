from PIL import Image
import numpy as np

def encrypt_image(image_path, key):
    """
    Encrypt an image by adding a key value to each pixel.
    
    Parameters:
        image_path (str): Path to the image file.
        key (int): Encryption key value to manipulate pixel values.
    
    Returns:
        np.ndarray: The encrypted image as a NumPy array.
    """
    # Load the image and convert it to an array
    image = Image.open(C:\Users\kaush\OneDrive\Desktop\mini)
    image_array = np.array(image)
    
    # Encrypt the image by adding the key to each pixel value
    encrypted_array = (image_array + key) % 256  # Ensure values stay within [0, 255]
    
    return encrypted_array, image.size, image.mode

def decrypt_image(encrypted_array, key):
    """
    Decrypt an image by subtracting the key value from each pixel.
    
    Parameters:
        encrypted_array (np.ndarray): The encrypted image as a NumPy array.
        key (int): Encryption key value to manipulate pixel values.
    
    Returns:
        np.ndarray: The decrypted image as a NumPy array.
    """
    # Decrypt the image by subtracting the key from each pixel value
    decrypted_array = (encrypted_array - key) % 256  # Ensure values stay within [0, 255]
    
    return decrypted_array

def save_image(array, size, mode, save_path):
    """
    Save an image from a NumPy array to a file.
    
    Parameters:
        array (np.ndarray): The image data as a NumPy array.
        size (tuple): The size of the image (width, height).
        mode (str): The mode of the image (e.g., "RGB", "L").
        save_path (str): Path to save the image.
    """
    image = Image.fromarray(array.astype('uint8'), mode)
    image.save(save_path)

def main():
    print("Image Encryption/Decryption Tool")
    while True:
        print("\nOptions:")
        print("1. Encrypt an image")
        print("2. Decrypt an image")
        print("3. Exit")
        
        choice = input("Select an option (1/2/3): ")
        
        if choice == '1':
            image_path = input("Enter the path to the image to encrypt: ")
            key = int(input("Enter an encryption key (integer): "))
            encrypted_array, size, mode = encrypt_image(image_path, key)
            
            save_path = input("Enter the path to save the encrypted image: ")
            save_image(encrypted_array, size, mode, save_path)
            print(f"Encrypted image saved to {save_path}")
        
        elif choice == '2':
            image_path = input("Enter the path to the encrypted image: ")
            encrypted_image = Image.open(image_path)
            encrypted_array = np.array(encrypted_image)
            key = int(input("Enter the encryption key used for decryption: "))
            
            decrypted_array = decrypt_image(encrypted_array, key)
            save_path = input("Enter the path to save the decrypted image: ")
            save_image(decrypted_array, encrypted_image.size, encrypted_image.mode, save_path)
            print(f"Decrypted image saved to {save_path}")
        
        elif choice == '3':
            print("Goodbye!")
            break
        
        else:
            print("Invalid choice. Please select 1, 2, or 3.")

if __name__ == "__main__":
    main()
